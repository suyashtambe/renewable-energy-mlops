# name: Renewable Energy MLOps CI/CD 1 code
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   mlops-pipeline:
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Checkout repo
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       # Step 2: Setup Python
#       - name: Set up Python 3.10
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.10'

#       # Step 3: Install dependencies
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#           pip install dvc[all] mlflow

#       # Step 4: Run preprocessing 
#       - name: Run preprocessing
#         run: |
#           python src/preprocess.py

#       # Step 5: Run model training
#       - name: Run model training
#         run: |
#           python src/model_train.py

#       # Step 6: Commit & push updated model artifacts
#       - name: Commit trained model & metrics
#         run: |
#           git config --global user.name "github-actions"
#           git config --global user.email "actions@github.com"
#           git add -A
#           git commit -m "Auto-update model and metrics [skip ci]" || echo "No changes to commit"
#           git push origin main || echo "No push needed"

#   deploy:
#     runs-on: ubuntu-latest
#     needs: mlops-pipeline

#     steps:
#       # Step 1: Checkout repo
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       # Step 2: Set up SSH key for EC2 access
#       - name: Setup SSH Key
#         run: |
#           echo "${{ secrets.PRIVATE_KEY }}" > private_key.pem
#           chmod 600 private_key.pem

#       # Step 3: Deploy Docker container on EC2
#       - name: Deploy Docker container on EC2
#         run: |
#           ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
#             echo " Connected to EC2 instance"

#             cd ${{ secrets.PROJECT_PATH }}

#             echo "Pulling latest changes..."
#             git pull origin main

#             echo "Stopping old container..."
#             docker stop renewable-energy-mlops || true
#             docker rm renewable-energy-mlops || true

#             echo "Building and running new container..."
#             docker build -t renewable-energy-mlops .
#             docker run -d -p 8000:8000 renewable-energy-mlops

#             echo " Deployment successful!"
#           EOF


# 2 code

# name: Renewable Energy MLOps Pipeline

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   train:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Docker
#         uses: docker/setup-buildx-action@v3

#       - name: Build Docker image
#         run: docker build -t energy-mlops .

#       - name: Run training in Docker
#         run: docker run energy-mlops


name: MLOps Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-train-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install dvc[s3] boto3 awscli

      - name: Configure AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Pull data from DVC (S3)
        run: dvc pull -r s3remote

      - name: Run preprocessing and training
        run: |
          python src/preprocess.py
          python src/train.py

      - name: Push updated model to DVC (S3)
        run: |
          dvc add models/
          dvc push -r s3remote
          git add models.dvc
          git commit -m "Updated model"
          git push origin main || echo "No model change"

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build and Push Docker Image
        run: |
          docker build -t energy-mlops:latest .
          docker tag energy-mlops:latest ${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.ECR_REPOSITORY }}:latest
            docker stop energy-mlops || true
            docker rm energy-mlops || true
            docker run -d -p 8000:8000 --name energy-mlops ${{ secrets.ECR_REPOSITORY }}:latest
